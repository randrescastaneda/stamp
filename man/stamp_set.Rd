% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stamp.R
\name{stamp_set}
\alias{stamp_set}
\title{Set an attribute \emph{stamp} to R object}
\usage{
stamp_set(x, ...)
}
\arguments{
\item{...}{
  Arguments passed on to \code{\link[=stamp_get]{stamp_get}}
  \describe{
    \item{\code{x}}{An arbitrary R object which will then be passed to the
base::serialize function}
    \item{\code{algo}}{character: default is value in option "stamp.digest.algo". This
argument is the algorithms to be used; currently available choices are md5,
which is also the default, sha1, crc32, sha256, sha512, xxhash32, xxhash64,
murmur32, spookyhash and blake3}
    \item{\code{serialize}}{A logical variable indicating whether the object
    should be serialized using \code{serialize} (in ASCII
    form). Setting this to \code{FALSE} allows to compare the digest
    output of given character strings to known control output. It also
    allows the use of raw vectors such as the output of non-ASCII
    serialization.
  }
    \item{\code{file}}{A logical variable indicating whether the object is a file
    name or a file name if \code{object} is not specified.}
    \item{\code{length}}{Number of characters to process. By default, when
    \code{length} is set to \code{Inf}, the whole string or file is
    processed.}
    \item{\code{skip}}{Number of input bytes to skip before calculating the
    digest. Negative values are invalid and currently treated as zero.
    Special value \code{"auto"} will cause serialization header to be
    skipped if \code{serialize} is set to \code{TRUE} (the serialization
    header contains the R version number thus skipping it allows the
    comparison of hashes across platforms and some R versions).
  }
    \item{\code{ascii}}{This flag is passed to the \code{serialize} function if
    \code{serialize} is set to \code{TRUE}, determining whether the hash
    is computed on the ASCII or binary representation.}
    \item{\code{raw}}{A logical variable with a default value of FALSE, implying
    \code{digest} returns digest output as ASCII hex values. Set to TRUE
    to return \code{digest} output in raw (binary) form. Note that this
    option is supported by most but not all of the implemented hashing
    algorithms}
    \item{\code{seed}}{an integer to seed the random number generator.  This is only
    used in the \code{xxhash32}, \code{xxhash64} and \code{murmur32} functions
    and can be used to generate additional hashes for the same input if
    desired.}
    \item{\code{errormode}}{A character value denoting a choice for the behaviour in
    the case of error: \sQuote{stop} aborts (and is the default value),
    \sQuote{warn} emits a warning and returns \code{NULL} and
    \sQuote{silent} suppresses the error and returns an empty string.}
  }}
}
\value{
R object in \code{x} with attribute \emph{stamp}
}
\description{
This functions does the same as stamp_get() but stores the
stamps as an attribute in the object. If the object is not saved afterward
the stamps won't be permanent. Yet, it is useful for quick verification.
}
\examples{
x <- data.frame(a = 1:10, b = letters[1:10])
stamp_set(x) |> attr(which = "stamp")
}
\seealso{
Other stamp functions: 
\code{\link{stamp_attr}()},
\code{\link{stamp_confirm}()},
\code{\link{stamp_get}()},
\code{\link{stamp_time}()}
}
\concept{stamp functions}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stamp.R
\name{stamp_confirm}
\alias{stamp_confirm}
\title{Confirm stamp has not changed}
\usage{
stamp_confirm(
  x,
  st_dir = NULL,
  st_name = NULL,
  st_ext = getOption("stamp.default.ext"),
  verbose = getOption("stamp.verbose"),
  ...
)
}
\arguments{
\item{x}{An arbitrary R object which will then be passed to the
base::serialize function}

\item{st_dir}{character: parent directory where the stamp file if saved.}

\item{st_name}{character: name of stamp (see details).}

\item{st_ext}{character: format of stamp file to save. Default is value in
option "stamp.default.ext"}

\item{verbose}{logical: whether to display additional information. This could
be changed in option \code{"stamp.verbose"}. Default is \code{TRUE}}

\item{...}{
  Arguments passed on to \code{\link[=stamp_get]{stamp_get}}
  \describe{
    \item{\code{algo}}{character: default is value in option "stamp.digest.algo". This
argument is the algorithms to be used; currently available choices are md5,
which is also the default, sha1, crc32, sha256, sha512, xxhash32, xxhash64,
murmur32, spookyhash and blake3}
    \item{\code{serialize}}{A logical variable indicating whether the object
    should be serialized using \code{serialize} (in ASCII
    form). Setting this to \code{FALSE} allows to compare the digest
    output of given character strings to known control output. It also
    allows the use of raw vectors such as the output of non-ASCII
    serialization.
  }
    \item{\code{file}}{A logical variable indicating whether the object is a file
    name or a file name if \code{object} is not specified.}
    \item{\code{length}}{Number of characters to process. By default, when
    \code{length} is set to \code{Inf}, the whole string or file is
    processed.}
    \item{\code{skip}}{Number of input bytes to skip before calculating the
    digest. Negative values are invalid and currently treated as zero.
    Special value \code{"auto"} will cause serialization header to be
    skipped if \code{serialize} is set to \code{TRUE} (the serialization
    header contains the R version number thus skipping it allows the
    comparison of hashes across platforms and some R versions).
  }
    \item{\code{ascii}}{This flag is passed to the \code{serialize} function if
    \code{serialize} is set to \code{TRUE}, determining whether the hash
    is computed on the ASCII or binary representation.}
    \item{\code{raw}}{A logical variable with a default value of FALSE, implying
    \code{digest} returns digest output as ASCII hex values. Set to TRUE
    to return \code{digest} output in raw (binary) form. Note that this
    option is supported by most but not all of the implemented hashing
    algorithms}
    \item{\code{seed}}{an integer to seed the random number generator.  This is only
    used in the \code{xxhash32}, \code{xxhash64} and \code{murmur32} functions
    and can be used to generate additional hashes for the same input if
    desired.}
    \item{\code{errormode}}{A character value denoting a choice for the behaviour in
    the case of error: \sQuote{stop} aborts (and is the default value),
    \sQuote{warn} emits a warning and returns \code{NULL} and
    \sQuote{silent} suppresses the error and returns an empty string.}
  }}
}
\value{
Logical value. \code{FALSE} if the objects do not match and  \code{TRUE} if
they do.
}
\description{
verifies that, were the stamp recalculated, it would match the
one previously set with stamp_set() of stamp_save().
}
\details{
\code{st_name} is the name of the stamp and it could be used in two
different ways. First, if \code{st_dir} is NULL, it is assumed that the user
refers to \code{st_name} as the stamp saved in the \code{.stamp} env and not to a stamp
saved in a particular drive. If \code{st_dir} is not NULL, then \code{st_name} is the
name of file that contains the stamp. Notice that all stamps that are saved
to disk are prefixed with the value in option "stamp.stamp_prefix", which by
default is "st_". You don't need to add the prefix, but if you do and it
happens to be the same as in "stamp.stamp_prefix", it will be ignored.
}
\examples{
\dontrun{
  x <- data.frame(a = 1:5, b = "hola")
  st_name <- "stx"
  stamp_set(x, st_name, replace = TRUE)
  # must provide st_dir or st_name
  stamp_confirm(x, st_name = st_name)
}
}
\seealso{
Other stamp functions: 
\code{\link{stamp_get}()},
\code{\link{stamp_save}()},
\code{\link{stamp_set}()},
\code{\link{stamp_time}()},
\code{\link{stamp_x_attr}()}
}
\concept{stamp functions}
